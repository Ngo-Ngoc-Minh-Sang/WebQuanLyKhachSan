#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyKhachSan.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLKS_WEB")]
	public partial class dbQLKSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHITIET_SDDV(CHITIET_SDDV instance);
    partial void UpdateCHITIET_SDDV(CHITIET_SDDV instance);
    partial void DeleteCHITIET_SDDV(CHITIET_SDDV instance);
    partial void InsertTRAPHONG(TRAPHONG instance);
    partial void UpdateTRAPHONG(TRAPHONG instance);
    partial void DeleteTRAPHONG(TRAPHONG instance);
    partial void InsertCT_DATPHONG(CT_DATPHONG instance);
    partial void UpdateCT_DATPHONG(CT_DATPHONG instance);
    partial void DeleteCT_DATPHONG(CT_DATPHONG instance);
    partial void InsertCTHD(CTHD instance);
    partial void UpdateCTHD(CTHD instance);
    partial void DeleteCTHD(CTHD instance);
    partial void InsertDATPHONG(DATPHONG instance);
    partial void UpdateDATPHONG(DATPHONG instance);
    partial void DeleteDATPHONG(DATPHONG instance);
    partial void InsertDICHVU(DICHVU instance);
    partial void UpdateDICHVU(DICHVU instance);
    partial void DeleteDICHVU(DICHVU instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertNHANPHONG(NHANPHONG instance);
    partial void UpdateNHANPHONG(NHANPHONG instance);
    partial void DeleteNHANPHONG(NHANPHONG instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertPHONG(PHONG instance);
    partial void UpdatePHONG(PHONG instance);
    partial void DeletePHONG(PHONG instance);
    partial void InsertSUDUNG_DV(SUDUNG_DV instance);
    partial void UpdateSUDUNG_DV(SUDUNG_DV instance);
    partial void DeleteSUDUNG_DV(SUDUNG_DV instance);
    partial void InsertTK_ADMIN(TK_ADMIN instance);
    partial void UpdateTK_ADMIN(TK_ADMIN instance);
    partial void DeleteTK_ADMIN(TK_ADMIN instance);
    #endregion
		
		public dbQLKSDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLKS_WEBConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLKSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLKSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLKSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLKSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHITIET_SDDV> CHITIET_SDDVs
		{
			get
			{
				return this.GetTable<CHITIET_SDDV>();
			}
		}
		
		public System.Data.Linq.Table<TRAPHONG> TRAPHONGs
		{
			get
			{
				return this.GetTable<TRAPHONG>();
			}
		}
		
		public System.Data.Linq.Table<CT_DATPHONG> CT_DATPHONGs
		{
			get
			{
				return this.GetTable<CT_DATPHONG>();
			}
		}
		
		public System.Data.Linq.Table<CTHD> CTHDs
		{
			get
			{
				return this.GetTable<CTHD>();
			}
		}
		
		public System.Data.Linq.Table<DATPHONG> DATPHONGs
		{
			get
			{
				return this.GetTable<DATPHONG>();
			}
		}
		
		public System.Data.Linq.Table<DICHVU> DICHVUs
		{
			get
			{
				return this.GetTable<DICHVU>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<NHANPHONG> NHANPHONGs
		{
			get
			{
				return this.GetTable<NHANPHONG>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHONG> PHONGs
		{
			get
			{
				return this.GetTable<PHONG>();
			}
		}
		
		public System.Data.Linq.Table<SUDUNG_DV> SUDUNG_DVs
		{
			get
			{
				return this.GetTable<SUDUNG_DV>();
			}
		}
		
		public System.Data.Linq.Table<TK_ADMIN> TK_ADMINs
		{
			get
			{
				return this.GetTable<TK_ADMIN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIET_SDDV")]
	public partial class CHITIET_SDDV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA_SD;
		
		private string _MADV;
		
		private EntityRef<DICHVU> _DICHVU;
		
		private EntityRef<SUDUNG_DV> _SUDUNG_DV;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMA_SDChanging(string value);
    partial void OnMA_SDChanged();
    partial void OnMADVChanging(string value);
    partial void OnMADVChanged();
    #endregion
		
		public CHITIET_SDDV()
		{
			this._DICHVU = default(EntityRef<DICHVU>);
			this._SUDUNG_DV = default(EntityRef<SUDUNG_DV>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_SD", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_SD
		{
			get
			{
				return this._MA_SD;
			}
			set
			{
				if ((this._MA_SD != value))
				{
					if (this._SUDUNG_DV.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMA_SDChanging(value);
					this.SendPropertyChanging();
					this._MA_SD = value;
					this.SendPropertyChanged("MA_SD");
					this.OnMA_SDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADV
		{
			get
			{
				return this._MADV;
			}
			set
			{
				if ((this._MADV != value))
				{
					if (this._DICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADVChanging(value);
					this.SendPropertyChanging();
					this._MADV = value;
					this.SendPropertyChanged("MADV");
					this.OnMADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_CHITIET_SDDV", Storage="_DICHVU", ThisKey="MADV", OtherKey="MADV", IsForeignKey=true)]
		public DICHVU DICHVU
		{
			get
			{
				return this._DICHVU.Entity;
			}
			set
			{
				DICHVU previousValue = this._DICHVU.Entity;
				if (((previousValue != value) 
							|| (this._DICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DICHVU.Entity = null;
						previousValue.CHITIET_SDDVs.Remove(this);
					}
					this._DICHVU.Entity = value;
					if ((value != null))
					{
						value.CHITIET_SDDVs.Add(this);
						this._MADV = value.MADV;
					}
					else
					{
						this._MADV = default(string);
					}
					this.SendPropertyChanged("DICHVU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUDUNG_DV_CHITIET_SDDV", Storage="_SUDUNG_DV", ThisKey="MA_SD", OtherKey="MA_SD", IsForeignKey=true)]
		public SUDUNG_DV SUDUNG_DV
		{
			get
			{
				return this._SUDUNG_DV.Entity;
			}
			set
			{
				SUDUNG_DV previousValue = this._SUDUNG_DV.Entity;
				if (((previousValue != value) 
							|| (this._SUDUNG_DV.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SUDUNG_DV.Entity = null;
						previousValue.CHITIET_SDDVs.Remove(this);
					}
					this._SUDUNG_DV.Entity = value;
					if ((value != null))
					{
						value.CHITIET_SDDVs.Add(this);
						this._MA_SD = value.MA_SD;
					}
					else
					{
						this._MA_SD = default(string);
					}
					this.SendPropertyChanged("SUDUNG_DV");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRAPHONG")]
	public partial class TRAPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATP;
		
		private System.DateTime _NGAYTP;
		
		private string _MANV;
		
		private string _MANP;
		
		private EntityRef<NHANPHONG> _NHANPHONG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATPChanging(string value);
    partial void OnMATPChanged();
    partial void OnNGAYTPChanging(System.DateTime value);
    partial void OnNGAYTPChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnMANPChanging(string value);
    partial void OnMANPChanged();
    #endregion
		
		public TRAPHONG()
		{
			this._NHANPHONG = default(EntityRef<NHANPHONG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATP", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATP
		{
			get
			{
				return this._MATP;
			}
			set
			{
				if ((this._MATP != value))
				{
					this.OnMATPChanging(value);
					this.SendPropertyChanging();
					this._MATP = value;
					this.SendPropertyChanged("MATP");
					this.OnMATPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTP", DbType="Date NOT NULL")]
		public System.DateTime NGAYTP
		{
			get
			{
				return this._NGAYTP;
			}
			set
			{
				if ((this._NGAYTP != value))
				{
					this.OnNGAYTPChanging(value);
					this.SendPropertyChanging();
					this._NGAYTP = value;
					this.SendPropertyChanged("NGAYTP");
					this.OnNGAYTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANP", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MANP
		{
			get
			{
				return this._MANP;
			}
			set
			{
				if ((this._MANP != value))
				{
					if (this._NHANPHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANPChanging(value);
					this.SendPropertyChanging();
					this._MANP = value;
					this.SendPropertyChanged("MANP");
					this.OnMANPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANPHONG_TRAPHONG", Storage="_NHANPHONG", ThisKey="MANP", OtherKey="MANP", IsForeignKey=true)]
		public NHANPHONG NHANPHONG
		{
			get
			{
				return this._NHANPHONG.Entity;
			}
			set
			{
				NHANPHONG previousValue = this._NHANPHONG.Entity;
				if (((previousValue != value) 
							|| (this._NHANPHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANPHONG.Entity = null;
						previousValue.TRAPHONGs.Remove(this);
					}
					this._NHANPHONG.Entity = value;
					if ((value != null))
					{
						value.TRAPHONGs.Add(this);
						this._MANP = value.MANP;
					}
					else
					{
						this._MANP = default(string);
					}
					this.SendPropertyChanged("NHANPHONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_TRAPHONG", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.TRAPHONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.TRAPHONGs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DATPHONG")]
	public partial class CT_DATPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADP;
		
		private string _MAPHONG;
		
		private System.DateTime _NGAYNP;
		
		private System.DateTime _NGAYTP;
		
		private System.Nullable<int> _TIENCOC;
		
		private System.Nullable<int> _SONGUOIO;
		
		private EntityRef<DATPHONG> _DATPHONG;
		
		private EntityRef<PHONG> _PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADPChanging(string value);
    partial void OnMADPChanged();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnNGAYNPChanging(System.DateTime value);
    partial void OnNGAYNPChanged();
    partial void OnNGAYTPChanging(System.DateTime value);
    partial void OnNGAYTPChanged();
    partial void OnTIENCOCChanging(System.Nullable<int> value);
    partial void OnTIENCOCChanged();
    partial void OnSONGUOIOChanging(System.Nullable<int> value);
    partial void OnSONGUOIOChanged();
    #endregion
		
		public CT_DATPHONG()
		{
			this._DATPHONG = default(EntityRef<DATPHONG>);
			this._PHONG = default(EntityRef<PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADP", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADP
		{
			get
			{
				return this._MADP;
			}
			set
			{
				if ((this._MADP != value))
				{
					if (this._DATPHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADPChanging(value);
					this.SendPropertyChanging();
					this._MADP = value;
					this.SendPropertyChanged("MADP");
					this.OnMADPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYNP", DbType="Date NOT NULL")]
		public System.DateTime NGAYNP
		{
			get
			{
				return this._NGAYNP;
			}
			set
			{
				if ((this._NGAYNP != value))
				{
					this.OnNGAYNPChanging(value);
					this.SendPropertyChanging();
					this._NGAYNP = value;
					this.SendPropertyChanged("NGAYNP");
					this.OnNGAYNPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTP", DbType="Date NOT NULL")]
		public System.DateTime NGAYTP
		{
			get
			{
				return this._NGAYTP;
			}
			set
			{
				if ((this._NGAYTP != value))
				{
					this.OnNGAYTPChanging(value);
					this.SendPropertyChanging();
					this._NGAYTP = value;
					this.SendPropertyChanged("NGAYTP");
					this.OnNGAYTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIENCOC", DbType="Int")]
		public System.Nullable<int> TIENCOC
		{
			get
			{
				return this._TIENCOC;
			}
			set
			{
				if ((this._TIENCOC != value))
				{
					this.OnTIENCOCChanging(value);
					this.SendPropertyChanging();
					this._TIENCOC = value;
					this.SendPropertyChanged("TIENCOC");
					this.OnTIENCOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SONGUOIO", DbType="Int")]
		public System.Nullable<int> SONGUOIO
		{
			get
			{
				return this._SONGUOIO;
			}
			set
			{
				if ((this._SONGUOIO != value))
				{
					this.OnSONGUOIOChanging(value);
					this.SendPropertyChanging();
					this._SONGUOIO = value;
					this.SendPropertyChanged("SONGUOIO");
					this.OnSONGUOIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATPHONG_CT_DATPHONG", Storage="_DATPHONG", ThisKey="MADP", OtherKey="MADP", IsForeignKey=true)]
		public DATPHONG DATPHONG
		{
			get
			{
				return this._DATPHONG.Entity;
			}
			set
			{
				DATPHONG previousValue = this._DATPHONG.Entity;
				if (((previousValue != value) 
							|| (this._DATPHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DATPHONG.Entity = null;
						previousValue.CT_DATPHONGs.Remove(this);
					}
					this._DATPHONG.Entity = value;
					if ((value != null))
					{
						value.CT_DATPHONGs.Add(this);
						this._MADP = value.MADP;
					}
					else
					{
						this._MADP = default(string);
					}
					this.SendPropertyChanged("DATPHONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CT_DATPHONG", Storage="_PHONG", ThisKey="MAPHONG", OtherKey="MAPHONG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.CT_DATPHONGs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.CT_DATPHONGs.Add(this);
						this._MAPHONG = value.MAPHONG;
					}
					else
					{
						this._MAPHONG = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHD")]
	public partial class CTHD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHD;
		
		private string _MAPHONG;
		
		private int _GIATIEN;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<PHONG> _PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnGIATIENChanging(int value);
    partial void OnGIATIENChanged();
    #endregion
		
		public CTHD()
		{
			this._HOADON = default(EntityRef<HOADON>);
			this._PHONG = default(EntityRef<PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIATIEN", DbType="Int NOT NULL")]
		public int GIATIEN
		{
			get
			{
				return this._GIATIEN;
			}
			set
			{
				if ((this._GIATIEN != value))
				{
					this.OnGIATIENChanging(value);
					this.SendPropertyChanging();
					this._GIATIEN = value;
					this.SendPropertyChanged("GIATIEN");
					this.OnGIATIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHD", Storage="_HOADON", ThisKey="MAHD", OtherKey="MAHD", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CTHDs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CTHDs.Add(this);
						this._MAHD = value.MAHD;
					}
					else
					{
						this._MAHD = default(string);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CTHD", Storage="_PHONG", ThisKey="MAPHONG", OtherKey="MAPHONG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.CTHDs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.CTHDs.Add(this);
						this._MAPHONG = value.MAPHONG;
					}
					else
					{
						this._MAPHONG = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DATPHONG")]
	public partial class DATPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADP;
		
		private System.DateTime _NGAYDAT;
		
		private System.Nullable<int> _MAKH;
		
		private EntitySet<CT_DATPHONG> _CT_DATPHONGs;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntitySet<NHANPHONG> _NHANPHONGs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADPChanging(string value);
    partial void OnMADPChanged();
    partial void OnNGAYDATChanging(System.DateTime value);
    partial void OnNGAYDATChanged();
    partial void OnMAKHChanging(System.Nullable<int> value);
    partial void OnMAKHChanged();
    #endregion
		
		public DATPHONG()
		{
			this._CT_DATPHONGs = new EntitySet<CT_DATPHONG>(new Action<CT_DATPHONG>(this.attach_CT_DATPHONGs), new Action<CT_DATPHONG>(this.detach_CT_DATPHONGs));
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._NHANPHONGs = new EntitySet<NHANPHONG>(new Action<NHANPHONG>(this.attach_NHANPHONGs), new Action<NHANPHONG>(this.detach_NHANPHONGs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADP", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADP
		{
			get
			{
				return this._MADP;
			}
			set
			{
				if ((this._MADP != value))
				{
					this.OnMADPChanging(value);
					this.SendPropertyChanging();
					this._MADP = value;
					this.SendPropertyChanged("MADP");
					this.OnMADPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDAT", DbType="Date NOT NULL")]
		public System.DateTime NGAYDAT
		{
			get
			{
				return this._NGAYDAT;
			}
			set
			{
				if ((this._NGAYDAT != value))
				{
					this.OnNGAYDATChanging(value);
					this.SendPropertyChanging();
					this._NGAYDAT = value;
					this.SendPropertyChanged("NGAYDAT");
					this.OnNGAYDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Int")]
		public System.Nullable<int> MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATPHONG_CT_DATPHONG", Storage="_CT_DATPHONGs", ThisKey="MADP", OtherKey="MADP")]
		public EntitySet<CT_DATPHONG> CT_DATPHONGs
		{
			get
			{
				return this._CT_DATPHONGs;
			}
			set
			{
				this._CT_DATPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATPHONG_HOADON", Storage="_HOADONs", ThisKey="MADP", OtherKey="MADP")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATPHONG_NHANPHONG", Storage="_NHANPHONGs", ThisKey="MADP", OtherKey="MADP")]
		public EntitySet<NHANPHONG> NHANPHONGs
		{
			get
			{
				return this._NHANPHONGs;
			}
			set
			{
				this._NHANPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DATPHONG", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DATPHONGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DATPHONGs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DATPHONGs(CT_DATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.DATPHONG = this;
		}
		
		private void detach_CT_DATPHONGs(CT_DATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.DATPHONG = null;
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.DATPHONG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.DATPHONG = null;
		}
		
		private void attach_NHANPHONGs(NHANPHONG entity)
		{
			this.SendPropertyChanging();
			entity.DATPHONG = this;
		}
		
		private void detach_NHANPHONGs(NHANPHONG entity)
		{
			this.SendPropertyChanging();
			entity.DATPHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DICHVU")]
	public partial class DICHVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADV;
		
		private string _TENDV;
		
		private int _GIADV;
		
		private string _LOAIDV;
		
		private EntitySet<CHITIET_SDDV> _CHITIET_SDDVs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADVChanging(string value);
    partial void OnMADVChanged();
    partial void OnTENDVChanging(string value);
    partial void OnTENDVChanged();
    partial void OnGIADVChanging(int value);
    partial void OnGIADVChanged();
    partial void OnLOAIDVChanging(string value);
    partial void OnLOAIDVChanged();
    #endregion
		
		public DICHVU()
		{
			this._CHITIET_SDDVs = new EntitySet<CHITIET_SDDV>(new Action<CHITIET_SDDV>(this.attach_CHITIET_SDDVs), new Action<CHITIET_SDDV>(this.detach_CHITIET_SDDVs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADV
		{
			get
			{
				return this._MADV;
			}
			set
			{
				if ((this._MADV != value))
				{
					this.OnMADVChanging(value);
					this.SendPropertyChanging();
					this._MADV = value;
					this.SendPropertyChanged("MADV");
					this.OnMADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENDV
		{
			get
			{
				return this._TENDV;
			}
			set
			{
				if ((this._TENDV != value))
				{
					this.OnTENDVChanging(value);
					this.SendPropertyChanging();
					this._TENDV = value;
					this.SendPropertyChanged("TENDV");
					this.OnTENDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIADV", DbType="Int NOT NULL")]
		public int GIADV
		{
			get
			{
				return this._GIADV;
			}
			set
			{
				if ((this._GIADV != value))
				{
					this.OnGIADVChanging(value);
					this.SendPropertyChanging();
					this._GIADV = value;
					this.SendPropertyChanged("GIADV");
					this.OnGIADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAIDV", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string LOAIDV
		{
			get
			{
				return this._LOAIDV;
			}
			set
			{
				if ((this._LOAIDV != value))
				{
					this.OnLOAIDVChanging(value);
					this.SendPropertyChanging();
					this._LOAIDV = value;
					this.SendPropertyChanged("LOAIDV");
					this.OnLOAIDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_CHITIET_SDDV", Storage="_CHITIET_SDDVs", ThisKey="MADV", OtherKey="MADV")]
		public EntitySet<CHITIET_SDDV> CHITIET_SDDVs
		{
			get
			{
				return this._CHITIET_SDDVs;
			}
			set
			{
				this._CHITIET_SDDVs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIET_SDDVs(CHITIET_SDDV entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = this;
		}
		
		private void detach_CHITIET_SDDVs(CHITIET_SDDV entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHD;
		
		private string _MANV;
		
		private string _MADP;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private int _TONGTIEN;
		
		private EntitySet<CTHD> _CTHDs;
		
		private EntityRef<DATPHONG> _DATPHONG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnMADPChanging(string value);
    partial void OnMADPChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnTONGTIENChanging(int value);
    partial void OnTONGTIENChanged();
    #endregion
		
		public HOADON()
		{
			this._CTHDs = new EntitySet<CTHD>(new Action<CTHD>(this.attach_CTHDs), new Action<CTHD>(this.detach_CTHDs));
			this._DATPHONG = default(EntityRef<DATPHONG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADP", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MADP
		{
			get
			{
				return this._MADP;
			}
			set
			{
				if ((this._MADP != value))
				{
					if (this._DATPHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADPChanging(value);
					this.SendPropertyChanging();
					this._MADP = value;
					this.SendPropertyChanged("MADP");
					this.OnMADPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Int NOT NULL")]
		public int TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHD", Storage="_CTHDs", ThisKey="MAHD", OtherKey="MAHD")]
		public EntitySet<CTHD> CTHDs
		{
			get
			{
				return this._CTHDs;
			}
			set
			{
				this._CTHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATPHONG_HOADON", Storage="_DATPHONG", ThisKey="MADP", OtherKey="MADP", IsForeignKey=true)]
		public DATPHONG DATPHONG
		{
			get
			{
				return this._DATPHONG.Entity;
			}
			set
			{
				DATPHONG previousValue = this._DATPHONG.Entity;
				if (((previousValue != value) 
							|| (this._DATPHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DATPHONG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._DATPHONG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MADP = value.MADP;
					}
					else
					{
						this._MADP = default(string);
					}
					this.SendPropertyChanged("DATPHONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKH;
		
		private string _HOTEN;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _EMAIL;
		
		private string _TAIKHOAN;
		
		private string _MATKHAU;
		
		private string _GIOITINH;
		
		private string _CCCD;
		
		private string _DIACHI;
		
		private string _SDT;
		
		private EntitySet<DATPHONG> _DATPHONGs;
		
		private EntitySet<SUDUNG_DV> _SUDUNG_DVs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(int value);
    partial void OnMAKHChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnTAIKHOANChanging(string value);
    partial void OnTAIKHOANChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnCCCDChanging(string value);
    partial void OnCCCDChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._DATPHONGs = new EntitySet<DATPHONG>(new Action<DATPHONG>(this.attach_DATPHONGs), new Action<DATPHONG>(this.detach_DATPHONGs));
			this._SUDUNG_DVs = new EntitySet<SUDUNG_DV>(new Action<SUDUNG_DV>(this.attach_SUDUNG_DVs), new Action<SUDUNG_DV>(this.detach_SUDUNG_DVs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="Char(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAIKHOAN", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN;
			}
			set
			{
				if ((this._TAIKHOAN != value))
				{
					this.OnTAIKHOANChanging(value);
					this.SendPropertyChanging();
					this._TAIKHOAN = value;
					this.SendPropertyChanged("TAIKHOAN");
					this.OnTAIKHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(5)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="Char(15) NOT NULL", CanBeNull=false)]
		public string CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DATPHONG", Storage="_DATPHONGs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<DATPHONG> DATPHONGs
		{
			get
			{
				return this._DATPHONGs;
			}
			set
			{
				this._DATPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_SUDUNG_DV", Storage="_SUDUNG_DVs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<SUDUNG_DV> SUDUNG_DVs
		{
			get
			{
				return this._SUDUNG_DVs;
			}
			set
			{
				this._SUDUNG_DVs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DATPHONGs(DATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DATPHONGs(DATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_SUDUNG_DVs(SUDUNG_DV entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_SUDUNG_DVs(SUDUNG_DV entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANPHONG")]
	public partial class NHANPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANP;
		
		private System.DateTime _NGAYNP;
		
		private string _MADP;
		
		private EntitySet<TRAPHONG> _TRAPHONGs;
		
		private EntityRef<DATPHONG> _DATPHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANPChanging(string value);
    partial void OnMANPChanged();
    partial void OnNGAYNPChanging(System.DateTime value);
    partial void OnNGAYNPChanged();
    partial void OnMADPChanging(string value);
    partial void OnMADPChanged();
    #endregion
		
		public NHANPHONG()
		{
			this._TRAPHONGs = new EntitySet<TRAPHONG>(new Action<TRAPHONG>(this.attach_TRAPHONGs), new Action<TRAPHONG>(this.detach_TRAPHONGs));
			this._DATPHONG = default(EntityRef<DATPHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANP", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANP
		{
			get
			{
				return this._MANP;
			}
			set
			{
				if ((this._MANP != value))
				{
					this.OnMANPChanging(value);
					this.SendPropertyChanging();
					this._MANP = value;
					this.SendPropertyChanged("MANP");
					this.OnMANPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYNP", DbType="Date NOT NULL")]
		public System.DateTime NGAYNP
		{
			get
			{
				return this._NGAYNP;
			}
			set
			{
				if ((this._NGAYNP != value))
				{
					this.OnNGAYNPChanging(value);
					this.SendPropertyChanging();
					this._NGAYNP = value;
					this.SendPropertyChanged("NGAYNP");
					this.OnNGAYNPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADP", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MADP
		{
			get
			{
				return this._MADP;
			}
			set
			{
				if ((this._MADP != value))
				{
					if (this._DATPHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADPChanging(value);
					this.SendPropertyChanging();
					this._MADP = value;
					this.SendPropertyChanged("MADP");
					this.OnMADPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANPHONG_TRAPHONG", Storage="_TRAPHONGs", ThisKey="MANP", OtherKey="MANP")]
		public EntitySet<TRAPHONG> TRAPHONGs
		{
			get
			{
				return this._TRAPHONGs;
			}
			set
			{
				this._TRAPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATPHONG_NHANPHONG", Storage="_DATPHONG", ThisKey="MADP", OtherKey="MADP", IsForeignKey=true)]
		public DATPHONG DATPHONG
		{
			get
			{
				return this._DATPHONG.Entity;
			}
			set
			{
				DATPHONG previousValue = this._DATPHONG.Entity;
				if (((previousValue != value) 
							|| (this._DATPHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DATPHONG.Entity = null;
						previousValue.NHANPHONGs.Remove(this);
					}
					this._DATPHONG.Entity = value;
					if ((value != null))
					{
						value.NHANPHONGs.Add(this);
						this._MADP = value.MADP;
					}
					else
					{
						this._MADP = default(string);
					}
					this.SendPropertyChanged("DATPHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TRAPHONGs(TRAPHONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANPHONG = this;
		}
		
		private void detach_TRAPHONGs(TRAPHONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANPHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _TENNV;
		
		private string _CHUCVU;
		
		private string _GIOITINH;
		
		private string _DIACHI;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private EntitySet<TRAPHONG> _TRAPHONGs;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntitySet<TK_ADMIN> _TK_ADMINs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnTENNVChanging(string value);
    partial void OnTENNVChanged();
    partial void OnCHUCVUChanging(string value);
    partial void OnCHUCVUChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._TRAPHONGs = new EntitySet<TRAPHONG>(new Action<TRAPHONG>(this.attach_TRAPHONGs), new Action<TRAPHONG>(this.detach_TRAPHONGs));
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._TK_ADMINs = new EntitySet<TK_ADMIN>(new Action<TK_ADMIN>(this.attach_TK_ADMINs), new Action<TK_ADMIN>(this.detach_TK_ADMINs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENNV
		{
			get
			{
				return this._TENNV;
			}
			set
			{
				if ((this._TENNV != value))
				{
					this.OnTENNVChanging(value);
					this.SendPropertyChanging();
					this._TENNV = value;
					this.SendPropertyChanged("TENNV");
					this.OnTENNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHUCVU", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CHUCVU
		{
			get
			{
				return this._CHUCVU;
			}
			set
			{
				if ((this._CHUCVU != value))
				{
					this.OnCHUCVUChanging(value);
					this.SendPropertyChanging();
					this._CHUCVU = value;
					this.SendPropertyChanged("CHUCVU");
					this.OnCHUCVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(5)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_TRAPHONG", Storage="_TRAPHONGs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<TRAPHONG> TRAPHONGs
		{
			get
			{
				return this._TRAPHONGs;
			}
			set
			{
				this._TRAPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_HOADONs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_TK_ADMIN", Storage="_TK_ADMINs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<TK_ADMIN> TK_ADMINs
		{
			get
			{
				return this._TK_ADMINs;
			}
			set
			{
				this._TK_ADMINs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TRAPHONGs(TRAPHONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_TRAPHONGs(TRAPHONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_TK_ADMINs(TK_ADMIN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_TK_ADMINs(TK_ADMIN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONG")]
	public partial class PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHONG;
		
		private string _TENPHONG;
		
		private string _LOAIPHONG;
		
		private string _TINHTRANG;
		
		private string _MOTAPHONG;
		
		private string _ANHPHONG;
		
		private System.Nullable<int> _GIA;
		
		private System.Nullable<int> _SL_NGUOI_TOIDA;
		
		private EntitySet<CT_DATPHONG> _CT_DATPHONGs;
		
		private EntitySet<CTHD> _CTHDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnTENPHONGChanging(string value);
    partial void OnTENPHONGChanged();
    partial void OnLOAIPHONGChanging(string value);
    partial void OnLOAIPHONGChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    partial void OnMOTAPHONGChanging(string value);
    partial void OnMOTAPHONGChanged();
    partial void OnANHPHONGChanging(string value);
    partial void OnANHPHONGChanged();
    partial void OnGIAChanging(System.Nullable<int> value);
    partial void OnGIAChanged();
    partial void OnSL_NGUOI_TOIDAChanging(System.Nullable<int> value);
    partial void OnSL_NGUOI_TOIDAChanged();
    #endregion
		
		public PHONG()
		{
			this._CT_DATPHONGs = new EntitySet<CT_DATPHONG>(new Action<CT_DATPHONG>(this.attach_CT_DATPHONGs), new Action<CT_DATPHONG>(this.detach_CT_DATPHONGs));
			this._CTHDs = new EntitySet<CTHD>(new Action<CTHD>(this.attach_CTHDs), new Action<CTHD>(this.detach_CTHDs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPHONG", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENPHONG
		{
			get
			{
				return this._TENPHONG;
			}
			set
			{
				if ((this._TENPHONG != value))
				{
					this.OnTENPHONGChanging(value);
					this.SendPropertyChanging();
					this._TENPHONG = value;
					this.SendPropertyChanged("TENPHONG");
					this.OnTENPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAIPHONG", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string LOAIPHONG
		{
			get
			{
				return this._LOAIPHONG;
			}
			set
			{
				if ((this._LOAIPHONG != value))
				{
					this.OnLOAIPHONGChanging(value);
					this.SendPropertyChanging();
					this._LOAIPHONG = value;
					this.SendPropertyChanged("LOAIPHONG");
					this.OnLOAIPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTAPHONG", DbType="NVarChar(700)")]
		public string MOTAPHONG
		{
			get
			{
				return this._MOTAPHONG;
			}
			set
			{
				if ((this._MOTAPHONG != value))
				{
					this.OnMOTAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MOTAPHONG = value;
					this.SendPropertyChanged("MOTAPHONG");
					this.OnMOTAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANHPHONG", DbType="Char(50)")]
		public string ANHPHONG
		{
			get
			{
				return this._ANHPHONG;
			}
			set
			{
				if ((this._ANHPHONG != value))
				{
					this.OnANHPHONGChanging(value);
					this.SendPropertyChanging();
					this._ANHPHONG = value;
					this.SendPropertyChanged("ANHPHONG");
					this.OnANHPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Int")]
		public System.Nullable<int> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_NGUOI_TOIDA", DbType="Int")]
		public System.Nullable<int> SL_NGUOI_TOIDA
		{
			get
			{
				return this._SL_NGUOI_TOIDA;
			}
			set
			{
				if ((this._SL_NGUOI_TOIDA != value))
				{
					this.OnSL_NGUOI_TOIDAChanging(value);
					this.SendPropertyChanging();
					this._SL_NGUOI_TOIDA = value;
					this.SendPropertyChanged("SL_NGUOI_TOIDA");
					this.OnSL_NGUOI_TOIDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CT_DATPHONG", Storage="_CT_DATPHONGs", ThisKey="MAPHONG", OtherKey="MAPHONG")]
		public EntitySet<CT_DATPHONG> CT_DATPHONGs
		{
			get
			{
				return this._CT_DATPHONGs;
			}
			set
			{
				this._CT_DATPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CTHD", Storage="_CTHDs", ThisKey="MAPHONG", OtherKey="MAPHONG")]
		public EntitySet<CTHD> CTHDs
		{
			get
			{
				return this._CTHDs;
			}
			set
			{
				this._CTHDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DATPHONGs(CT_DATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_CT_DATPHONGs(CT_DATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
		
		private void attach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SUDUNG_DV")]
	public partial class SUDUNG_DV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA_SD;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<int> _MAKH;
		
		private System.Nullable<double> _TONGTIEN;
		
		private System.Nullable<System.DateTime> _NGAYDAT;
		
		private EntitySet<CHITIET_SDDV> _CHITIET_SDDVs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMA_SDChanging(string value);
    partial void OnMA_SDChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnMAKHChanging(System.Nullable<int> value);
    partial void OnMAKHChanged();
    partial void OnTONGTIENChanging(System.Nullable<double> value);
    partial void OnTONGTIENChanged();
    partial void OnNGAYDATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDATChanged();
    #endregion
		
		public SUDUNG_DV()
		{
			this._CHITIET_SDDVs = new EntitySet<CHITIET_SDDV>(new Action<CHITIET_SDDV>(this.attach_CHITIET_SDDVs), new Action<CHITIET_SDDV>(this.detach_CHITIET_SDDVs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_SD", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_SD
		{
			get
			{
				return this._MA_SD;
			}
			set
			{
				if ((this._MA_SD != value))
				{
					this.OnMA_SDChanging(value);
					this.SendPropertyChanging();
					this._MA_SD = value;
					this.SendPropertyChanged("MA_SD");
					this.OnMA_SDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Int")]
		public System.Nullable<int> MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Float")]
		public System.Nullable<double> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDAT", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYDAT
		{
			get
			{
				return this._NGAYDAT;
			}
			set
			{
				if ((this._NGAYDAT != value))
				{
					this.OnNGAYDATChanging(value);
					this.SendPropertyChanging();
					this._NGAYDAT = value;
					this.SendPropertyChanged("NGAYDAT");
					this.OnNGAYDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUDUNG_DV_CHITIET_SDDV", Storage="_CHITIET_SDDVs", ThisKey="MA_SD", OtherKey="MA_SD")]
		public EntitySet<CHITIET_SDDV> CHITIET_SDDVs
		{
			get
			{
				return this._CHITIET_SDDVs;
			}
			set
			{
				this._CHITIET_SDDVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_SUDUNG_DV", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.SUDUNG_DVs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.SUDUNG_DVs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIET_SDDVs(CHITIET_SDDV entity)
		{
			this.SendPropertyChanging();
			entity.SUDUNG_DV = this;
		}
		
		private void detach_CHITIET_SDDVs(CHITIET_SDDV entity)
		{
			this.SendPropertyChanging();
			entity.SUDUNG_DV = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TK_ADMIN")]
	public partial class TK_ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _TAIKHOAN;
		
		private string _MATKHAU;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnTAIKHOANChanging(string value);
    partial void OnTAIKHOANChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    #endregion
		
		public TK_ADMIN()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAIKHOAN", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN;
			}
			set
			{
				if ((this._TAIKHOAN != value))
				{
					this.OnTAIKHOANChanging(value);
					this.SendPropertyChanging();
					this._TAIKHOAN = value;
					this.SendPropertyChanged("TAIKHOAN");
					this.OnTAIKHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_TK_ADMIN", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.TK_ADMINs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.TK_ADMINs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
